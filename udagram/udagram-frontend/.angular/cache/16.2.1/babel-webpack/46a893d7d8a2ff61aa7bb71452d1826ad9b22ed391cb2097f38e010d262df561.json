{"ast":null,"code":"import _asyncToGenerator from \"D:/Full_Stack_JavaScript/Deploy/nd0067-c4-deployment-process-project-starter/udagram/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _ref;\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0 ? Object.assign({\n    'ion-color': true,\n    [`ion-color-${color}`]: true\n  }, cssClassMap) : cssClassMap;\n};\nconst getClassList = classes => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(c => c != null).map(c => c.trim()).filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = classes => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = function openURL(_x, _x2, _x3, _x4) {\n  return (_ref = _ref || _asyncToGenerator(function* (url, ev, direction, animation) {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n      const router = document.querySelector('ion-router');\n      if (router) {\n        if (ev != null) {\n          ev.preventDefault();\n        }\n        return router.push(url, direction, animation);\n      }\n    }\n    return false;\n  })).apply(this, arguments);\n};\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}